{"version":3,"sources":["components/AddTodo.js","components/TodoList.js","App.js","index.js"],"names":["AddTodo","props","useState","content","setContent","toast","useToast","onSubmit","e","preventDefault","todo","id","nanoid","body","addTodo","title","status","duration","isClosable","mt","variant","placeholder","value","onChange","target","colorScheme","px","type","TodoList","todos","length","divider","borderColor","borderWidth","p","borderRadius","w","maxW","base","sm","lg","xl","alignItems","map","icon","isRound","onClick","deleteTodo","m","fontSize","App","JSON","parse","localStorage","getItem","setTodos","useEffect","setItem","stringify","useColorMode","colorMode","toggleColorMode","size","alignSelf","mb","pb","fontWeight","bgGradient","bgClip","newTodos","filter","ReactDOM","render","StrictMode","initialColorMode","document","getElementById"],"mappings":"mRA0CeA,MAtCf,SAAiBC,GAAQ,IAAD,EACUC,mBAAS,IADnB,mBACbC,EADa,KACJC,EADI,KAEdC,EAAQC,cAwBd,OACI,sBAAMC,SAvBW,SAAAC,GAGjB,GAFAA,EAAEC,iBAEGN,EAAL,CAUA,IAAMO,EAAO,CACTC,GAAIC,cACJC,KAAMV,GAGVF,EAAMa,QAAQJ,GACdN,EAAW,SAfPC,EAAM,CACFU,MAAO,aACPC,OAAQ,QACRC,SAAU,IACVC,YAAY,KAepB,SACI,eAAC,IAAD,CAAQC,GAAG,IAAX,UACI,cAAC,IAAD,CAAOC,QAAQ,SAASC,YAAY,wBAAwBC,MAAOnB,EAASoB,SAAU,SAAAf,GAAC,OAAIJ,EAAWI,EAAEgB,OAAOF,UAC/G,cAAC,IAAD,CAAQG,YAAY,OAAOC,GAAG,IAAIC,KAAK,SAAvC,4B,mCCFDC,MA5Bf,SAAkB3B,GAEd,OAAQA,EAAM4B,MAAMC,OAKhB,cAAC,IAAD,CACAC,QAAS,cAAC,IAAD,IACTC,YAAY,WACZC,YAAY,MACZC,EAAE,IACFC,aAAa,KACbC,EAAE,OACFC,KAAM,CAAEC,KAAM,OAAQC,GAAI,OAAQC,GAAI,OAAQC,GAAI,QAClDC,WAAW,UARX,SASMzC,EAAM4B,MAAMc,KAAI,SAAAjC,GAAI,OAClB,eAAC,IAAD,WACI,cAAC,IAAD,UAAQA,EAAKG,OACb,cAAC,IAAD,IACA,cAAC,IAAD,CAAY+B,KAAM,cAAC,IAAD,IAAaC,SAAO,EAACC,QAAS,kBAAM7C,EAAM8C,WAAWrC,EAAKC,SAHnED,EAAKC,SAd1B,cAAC,IAAD,CAAOc,YAAY,QAAQS,EAAE,IAAIc,EAAE,IAAIb,aAAa,KAAKc,SAAS,SAAlE,wBC2COC,MA5Cf,WAAgB,IAAD,EAEehD,oBACtB,kBAAMiD,KAAKC,MAAMC,aAAaC,QAAQ,WAAa,MAH5C,mBAEJzB,EAFI,KAEG0B,EAFH,KAMXC,qBAAU,WACNH,aAAaI,QAAQ,QAASN,KAAKO,UAAU7B,MAC9C,CAACA,IAEJ,IAVW,EAmB4B8B,cAA/BC,EAnBG,EAmBHA,UAAWC,EAnBR,EAmBQA,gBAEnB,OACI,eAAC,IAAD,CAAQ3B,EAAG,EAAX,UACI,cAAC,IAAD,CACIU,KAAoB,UAAdgB,EAAwB,cAAC,IAAD,IAAY,cAAC,IAAD,IAC1Cf,SAAO,EACPiB,KAAK,KACLC,UAAU,WACVjB,QAASe,IACb,cAAC,IAAD,CACIG,GAAG,IACHC,GAAG,IACHC,WAAW,YACXJ,KAAK,MACLK,WAAW,6CACXC,OAAO,OANX,8BASA,cAAC,EAAD,CAAUvC,MAAOA,EAAOkB,WA5Bb,SAAApC,GACf,IAAM0D,EAAWxC,EAAMyC,QAAO,SAAA5D,GAAI,OAAIA,EAAKC,KAAOA,KAClD4C,EAASc,MA2BL,cAAC,EAAD,CAASvD,QAxBD,SAAAJ,GACZ6C,EAAS,GAAD,mBAAK1B,GAAL,CAAYnB,Y,kBChB5B6D,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAiBC,iBAAiB,SAC9B,cAAC,EAAD,SAGZC,SAASC,eAAe,W","file":"static/js/main.ac6d1d8c.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { HStack, Input, Button, useToast } from \"@chakra-ui/react\";\nimport { nanoid } from \"nanoid\";\n\nfunction AddTodo(props) {\n    const [content, setContent] = useState(\"\")\n    const toast = useToast()\n\n    const handleSubmit = e => {\n        e.preventDefault()\n\n        if (!content) {\n            toast({\n                title: \"No content\",\n                status: \"error\",\n                duration: 2000,\n                isClosable: true,\n            })\n            return\n        }\n\n        const todo = {\n            id: nanoid(),\n            body: content\n        }\n\n        props.addTodo(todo)\n        setContent(\"\")\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <HStack mt='8'>\n                <Input variant=\"filled\" placeholder=\"buy milk at the store\" value={content} onChange={e => setContent(e.target.value)} />\n                <Button colorScheme=\"pink\" px=\"8\" type=\"submit\">\n                    Add Todo\n                </Button>\n            </HStack>\n        </form>\n    );\n}\n\nexport default AddTodo;\n","import React from 'react'\nimport { FaTrash } from 'react-icons/fa'\nimport { HStack, Text, VStack, IconButton, StackDivider, Spacer, Badge } from '@chakra-ui/react'\n\nfunction TodoList(props) {\n    \n    return !props.todos.length ? (\n        <Badge colorScheme=\"green\" p=\"4\" m=\"4\" borderRadius=\"lg\" fontSize=\"medium\">\n            No Todos!\n        </Badge>\n    ) : (\n        <VStack\n        divider={<StackDivider />}\n        borderColor=\"gray.100\"\n        borderWidth=\"2px\"\n        p=\"4\"\n        borderRadius=\"lg\"\n        w=\"100%\"\n        maxW={{ base: '90vw', sm: '80vw', lg: '50vw', xl: '40vw' }}\n        alignItems=\"stretch\" >\n            { props.todos.map(todo => (\n                <HStack key={todo.id}>\n                    <Text>{ todo.body }</Text>\n                    <Spacer />\n                    <IconButton icon={<FaTrash />} isRound onClick={() => props.deleteTodo(todo.id)} />\n                </HStack>\n            )) }\n        </VStack>\n    )\n\n}\n\nexport default TodoList\n","import { Heading, VStack, IconButton, useColorMode } from '@chakra-ui/react'\nimport React, { useEffect, useState } from 'react'\nimport AddTodo from './components/AddTodo'\nimport TodoList from './components/TodoList'\nimport { FaSun, FaMoon } from 'react-icons/fa'\n\nfunction App() {\n\n    const [todos, setTodos] = useState(\n        () => JSON.parse(localStorage.getItem('todos')) || []\n    )\n\n    useEffect(() => {\n        localStorage.setItem('todos', JSON.stringify(todos))\n    }, [todos])\n\n    const deleteTodo = id => {\n        const newTodos = todos.filter(todo => todo.id !== id)\n        setTodos(newTodos)\n    }\n\n    const addTodo = todo => {\n        setTodos([...todos, todo])\n    }\n\n    const { colorMode, toggleColorMode } = useColorMode()\n\n    return (\n        <VStack p={4}>\n            <IconButton\n                icon={colorMode === 'light' ? <FaSun /> : <FaMoon />}\n                isRound\n                size=\"lg\"\n                alignSelf=\"flex-end\"\n                onClick={toggleColorMode} />\n            <Heading\n                mb='8'\n                pb='4'\n                fontWeight='extrabold'\n                size='2xl'\n                bgGradient='linear(to-r, pink.500, pink.300, blue.500)'\n                bgClip='text' >\n                Todo Application\n            </Heading>\n            <TodoList todos={todos} deleteTodo={deleteTodo} />\n            <AddTodo addTodo={addTodo} />\n        </VStack>\n    )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { ChakraProvider, ColorModeScript } from '@chakra-ui/react';\n\nReactDOM.render(\n    <React.StrictMode>\n        <ChakraProvider>\n            <ColorModeScript initialColorMode=\"dark\" />\n                <App />\n        </ChakraProvider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}